version: "3.8"

services:
  node-red:
    build: ./nodered
    container_name: nodered
    restart: always
    environment:
      - TZ=Europe/Athens
    ports:
      - "1880:1880"
    networks:
      - iot-net
    volumes:
      - ./nodered/data:/data
  eclipse-mosquitto:
    image: eclipse-mosquitto:2.0.14
    container_name: mosquitto
    restart: always
    ports:
      - "1883:1883"
    networks:
      - iot-net
    volumes:
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
  influxdb:
    image: influxdb:1.8.10
    container_name: influxdb
    restart: always
    environment:
      - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}
    networks:
      - iot-net
    volumes:
      - ./influxdb/data:/var/lib/influxdb
      - ./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - ./influxdb/init:/docker-entrypoint-initdb.d
  telegraf:
    image: telegraf:1.21.2
    container_name: telegraf
    restart: always
    environment:
      - HOST_PROC=/rootfs/proc
      - HOST_SYS=/rootfs/sys
      - HOST_ETC=/rootfs/etc
    networks:
      - iot-net
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/rootfs/sys:ro
      - /proc:/rootfs/proc:ro
      - /etc:/rootfs/etc:ro
  grafana:
    image: grafana/grafana:8.3.4
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    networks:
      - iot-net
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    user: "0" #run grafana as root user of raspberry or mount volume instead of bind mount   
    depends_on:
      - influxdb
  portainer:
    image: portainer/portainer-ce:2.9.3
    container_name: portainer
    restart: always
    ports:
      - "9443:9443"
    networks:
      - iot-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_volume:/data

networks:
  iot-net:

volumes:
  portainer_volume:
